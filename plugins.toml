# [[plugins]]
# repo = 'godlygeek/csapprox'
# if = "v:progname !=# 'gvim' && has('gui') && !has('nvim')"
# hook_add = '''
# " Convert colorscheme in Konsole.
#  let g:CSApprox_konsole = 1
#  let g:CSApprox_attr_map = { 'bold' : 'bold', 'italic' : '', 'sp' : '' }
# '''

# [[plugins]]
# repo = 'thinca/vim-guicolorscheme'
# if = "v:progname !=# 'gvim' && !has('gui') && !has('nvim')"

[[plugins]]
repo = 'Shougo/dein.vim'

# [[plugins]] # prevent message to print the real update
# repo = 'wsdjeg/dein-ui.vim'

# Default list of plugins
#########################

# GUI

[[plugins]]
repo   = 'scrooloose/nerdtree'
on_cmd = ['NERDTreeFind', 'NERDTreeToggle']

[[plugins]]
repo = 'liuchengxu/vista.vim'
on_cmd = "Vista"

[[plugins]] # marks
repo = 'kshenoy/vim-signature'

[[plugins]]
repo   = 'mbbill/undotree'
on_cmd = 'UndotreeToggle'

[[plugins]]
repo = 'mhinz/vim-startify'

[[plugins]]
repo = 'myusuf3/numbers.vim'

[[plugins]]
repo = 'junegunn/vim-peekaboo'

[[plugins]]
repo = 'CharlesGueunet/quickmenu.vim'

[[plugins]]
repo = 'tpope/vim-dispatch'
on_cmd = ['Dispatch', 'Dispatch!', 'Make', 'Make!', 'Start', 'Start!', 'Spawn', 'Spawn!']

[[plugins]] #C-w gh and associate to move window
repo = 'andymass/vim-tradewinds'
if = "exists('*win_screenpos') || exists('*nvim_win_get_position')"

[[plugins]] # Change / switch windows
repo = 't9md/vim-choosewin'
on_cmd = ['ChooseWin', 'ChooseWinSwap', 'ChooseWinSwapStay']

[[plugins]] # windows resize
repo = 'simeji/winresizer'
on_cmd = ['WinResizerStartResize']

[[plugins]] # top window with current context
repo = 'wellle/context.vim'

# Versionning

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'zivyangll/git-blame.vim'

[[plugins]]
repo = 'tpope/vim-fugitive'
# on_cmd = ['Git', 'Gcd', 'Glcd', 'Gstatus', 'Gcommit', 'Gmerge', 'Gpull', 'Grebase', 'Gpush', 'Gfetch', 'Ggrep', 'Glgrep', 'Glog', 'Gllog', 'Gedit', 'Gsplit', 'Gvsplit', 'Gtabedit', 'Gpedit', 'Gread', 'Gwrite', 'Gdiff', 'Gmove', 'Grename', 'Gdelete', 'Gremove', 'Gblame', 'Gbrowse']

[[plugins]] # beautiful git commit
repo = 'rhysd/committia.vim'

[[plugins]] # use tig directly
repo  = 'iberianpig/tig-explorer.vim'
if    ='executable("tig")'
on_cmd = ['TigBlame', 'TigGrep', 'TigGrepResume', 'TigOpenCurrentFile', 'TigOpenProjectRootDir', 'TigStatus']

# Operator /  Selection / Region

[[plugins]] # highlight selected area
repo = 'machakann/vim-highlightedyank'

[[plugins]] # higlight word / pattern
repo = 'inkarkat/vim-mark'
depends = ['vim-ingo-library']

[[plugins]] # highlight matching delimiters
repo = 'luochen1990/rainbow'
on_ft = ['c', 'cpp', 'go', 'ruby', 'javascript']

[[plugins]] # Brackets / delimiters autoclose
repo = 'Raimondi/delimitMate'
on_i = 1

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo    = 'sgur/vim-textobj-parameter'
depends = 'vim-textobj-user'

[[plugins]]
repo    = 'glts/vim-textobj-comment'
depends = 'vim-textobj-user'

[[plugins]]
repo    = 'kana/vim-textobj-indent'
depends = 'vim-textobj-user'

[[plugins]]
repo    = 'kana/vim-textobj-entire'
depends = 'vim-textobj-user'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]] # % works on if / while / ...
repo = 'andymass/vim-matchup'

# Buffers / Tabs / motions

[[plugins]] # Fuzzy motions
repo   = 'ctrlpvim/ctrlp.vim'
on_cmd = ['CtrlP', 'CtrlPBuffer', 'CtrlPMixed', 'CtrlPLine', 'CtrlPBufTag', 'CtrlPQuickfix']

[[plugins]] # fast travel with preview
repo = 'Lokaltog/vim-easymotion'

# Search & Replace

[[plugins]] # preview substitute
repo   = 'markonm/traces.vim'

[[plugins]] # number of occurence on find
repo = 'google/vim-searchindex'

[[plugins]] # search in files
repo = 'eugen0329/vim-esearch'

# Text process

[[plugins]] # align operator
repo = 'tommcdo/vim-lion'

[[plugins]] # cylcle between values / regexp
repo   = 'AndrewRadev/switch.vim'
on_cmd = ['Switch', 'SwitchReverse']

[[plugins]] # insertion without moving cursor
repo = 'joereynolds/place.vim'

[[plugins]] # cylce btween recent copy
repo = 'vim-scripts/YankRing.vim'

[[plugins]] # exchange two regions
repo = 'tommcdo/vim-exchange'

# Completion / Linters

[[plugins]] # LSP completion
repo = 'neoclide/coc.nvim'
merge = 0
build = './install.sh nightly'

[[plugins]] # asynchronous complete
repo    = 'w0rp/ale'

[[plugins]] # dot also repeats some plugins
repo = 'tpope/vim-repeat'

# Snippets

[[plugins]] # Engine
repo = 'SirVer/ultisnips'
# # For improved completion: CocInstall ultisnips

[[plugins]] # Definitions
repo = 'honza/vim-snippets'

# Lib & Tools for plugins

[[plugins]] # for vim-mark
repo = 'inkarkat/vim-ingo-library'

